.cabecalho{
    height: 20px;
    width: auto;
    color: darkgray;
    background-color: darkgray;
    outline-width: 2px;
    border-width: 5px;
    border-style: solid;
    border-bottom-color: rgb(110, 89, 130);
}

hr{
    width: 475px;
    align-self: center;
    padding-top: 15px;
    padding-bottom: 5px;
}

.hcabecalho{
    padding: 20px;
    color: rgb(135, 135, 135);
    stroke: rgb(119, 119, 130);
    font-size: 20px;
    text-align: justify;
}

form{
    background-color: rgb(250, 250, 250);
}

html > div{
    background-color: rgb(250, 250, 250);
}

html {
    background-color: rgb(250, 250, 250);
}

.cardAppCustomized{
    width: auto;
    align-self: center;
    background-color: white;
    padding-top: 50px;
}

.inputSpace{
    margin: 20px;
    padding-left: auto;
}

.cardTitle{
    background-color: white;
}

.anuncio{
    font-size: 10px;
    color: red;
}

.carregandoDados{
    color: rgb(65, 14, 154);
    font-family: Helvetica, Arial, sans-serif;
}

.carregandoComentarios{
    width: auto;
    height: auto;
}

.carregandoDadosServidor{
    background-color: rgb(250, 250, 250);
    /* pegando 100% da tela, uso a propriedade view */
    width: 99vw;
    height: 50vw;
    /* definindo o layout felex, pra poder usar o flex-direction 
    como row, para trabalhar como uma linha, colocando os itens na div 'linha' */
    display: flex;
    flex-direction: column;
    /* centralizando os itens na posição conforme indicado no flex-direction, neste
    caso uma column, neste caso, alinhando os itens na vertical. se o flex-direction 
    fosse um row, ele alinharia na horizontal; */
    justify-content: center;
    /* alinhando itens na vertical */
    align-items: center;
}

div > a {
    background-color:#343a40 ;
}
